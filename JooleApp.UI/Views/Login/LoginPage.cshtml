@model JooleApp.Domain.tblUser
@{
    ViewBag.Title = "LoginPage";
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <link href="@Url.Content("~/Content/CSS/LoginPage.css")" rel="stylesheet" type="text/css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js">
    </script>
    <script src="https://kit.fontawesome.com/d056727b08.js" crossorigin="anonymous"></script>
    @*script for showing register modal*@
    <script type="text/javascript">


        $(document).ready(function () {
            $("#btnShowModal").click(function () {
                $("#SignUpModal").modal('show');
            });

            $("#btnHideModal").click(function () {
                $("#SignUpModal").modal('hide');
            });

            //keep the modal open after submit
            var RegisterStringValue = '@(ViewBag.HasInput)';
            if (RegisterStringValue != "") {
                $("#SignUpModal").modal('show');
            }
        });
    </script>

</head>
<body>
    @*<div id="BodyDetail">*@

       
        
    <div id="signUp">
        <!-- a button to perform modal popup -->
        <button id="btnShowModal" >
            Sign Up
        </button>

    </div>


            <!-- sign up modal form appears in a fade style -->
            <div class="modal fade" tabindex="-1" id="SignUpModal"
                 data-keyboard="false" data-backdrop="static">

                <!-- size of the modal -->
                <div class="modal-dialog modal-lg">

                    <!-- Modal content -->
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">
                                ×
                            </button>
                            <h4 class="modal-title">Register as User</h4>
                        </div>
                        <div class="modal-body">
                            @*input form*@
                            @using (Html.BeginForm("LoginPage", "Login", FormMethod.Post, new { @id = "SignUpBox", enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()

                                //image preview
                                <div class="imagePart">
                                <label for="imagePreview" class="fieldName"> Image Preview: </label>
                                <div class="imgPreview" id="imgPreview">
                                    <img class="imgPreview-img"
                                         id="yourImage"
                                         @*src="/Images/testImage.PNG"*@
                                         src="@ViewBag.ImageSrc"
                                         alt="Avatar" />
                                </div>
                                @*//add image*@
                                <label for="image" class="fieldName">Your Profile Pic:</label>
                                <input type="file" name="inputFile" id="inputFile" accept="image/*" />
                                    </div>
                                <br />

                                //input username

                                <label for="userName" class="fieldName">User Name:</label>
                                @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control registerInput", @placeholder = "User Name" } })
                                <div class="text-danger">
                                    @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                                </div>


                                //input emailAddress
                                <label for="emailAddress" class="fieldName">Email Adress:</label>
                                @Html.EditorFor(model => model.emailAddress, new { htmlAttributes = new { @class = "form-control registerInput", @placeholder = "Email Id" } })
                                <div class="text-danger">
                                    @Html.ValidationMessageFor(model => model.emailAddress, "", new { @class = "text-danger" })
                                </div>

                                //input password
                                <label for="password" class="fieldName">Password:</label>
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control registerInput", @placeholder = "Password" } })

                                <div class="text-danger">
                                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                </div>

                                //input confirm password
                                <label for="confirmPassword" class="fieldName">Confirm Password:</label>
                                    @Html.EditorFor(model => model.confirmPassword, new { htmlAttributes = new { @class = "form-control registerInput", @placeholder = "Password" } })
                            
                                <div class="text-danger">
                                    @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                                </div>

                                <div class="text-success">
                                    @ViewBag.RegisterMessage
                                </div>
                                <div class="text-danger">
                                    @ViewBag.RegisterFailMessage
                                </div>



                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-primary button button4">Sign</button>
                                    <button type="button" id="btnHideModal" class="btn btn-primary button button4"> Back </button>
                                </div>

                                <div>

                                    @ViewBag.LogInMessage


                                </div>
                            }
                        </div>
                    </div>

                </div>
            </div>
        


            <div class="loginBox">
                @using (Html.BeginForm("Authorize", "Login", FormMethod.Post, new { @id = "loginBox" }))
                //action name, controller name, form method, html attribute
                {

                    @*User name label and input:*@
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.userName, new { @id = "useridtextbox", @class = "form-control loginInput", @placeholder = "Username or Email" })
                        <div class="input-group-addon icons">
                          
                                <i class="fas fa-user"></i>
                          
                        </div>
                    </div>
                    <br>
                    @*Password label and input*@
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.password, null, new { @id = "passwordtextbox", @class = "form-control loginInput", @placeholder = "Password" })
                        <div class="input-group-addon icons">
                            <i class="fas fa-lock"></i>
                        </div>
                    </div>

                    @*login error message*@
                    <div>
                        <div id="errorMessage" class="text-danger">
                            @ViewBag.LoginErrorMessage

                        </div>
                    </div>




                    <br>
                    <div id="loginButton">



                        <input type="submit" name="name" value="Log In" id="LoginBtn_1" class="btn btn-primary">
                    </div>
                }
            </div>


    @*</div>*@

</body>
@*script for uploading image *@
<script>
    const inputFile = document.getElementById("inputFile");
    const previewCont = document.getElementById("imgPreview");
    const previewImage = previewCont.querySelector(".imgPreview-img");

    inputFile.addEventListener("change", function () {
        const file = this.files[0];

        if (file) {
            const fileReader = new FileReader();
            previewImage.style.display = "inline";

            fileReader.addEventListener("load", function () {
                previewImage.setAttribute("src", this.result);
            });

            fileReader.readAsDataURL(file);
        }
    });
</script>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/bootstrap")
</html>

